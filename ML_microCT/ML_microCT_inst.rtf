{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs40 \cf0 ML_microCT Instructions:\
\

\fs24 ***Still VERY buggy and in need of updates, de-cluttering and performance enhancements***\
\

\b Last edited by: M. Jenkins\
Date: 12.09.17
\b0 \
\

\b Compile and execute program\
	
\b0 \
	
\b 1) 
\b0 open terminal and change present working drive to src folder location\
	
\b 2) 
\b0 enter the following command:\
\
		python main.py\
\
	
\b 3)
\b0  Program 
\b main menu
\b0  will be displayed\
		
\b order 
\b0 is vital as there are currently no re-routing methods implemented\
		
\b 3a) 
\b0 first choose 
\b 1
\b0  to navigate to
\b  image loading and preprocessing menu\
		3b) 
\b0 now choose 
\b 1 
\b0 to first load image stacks\
			this is hardcoded for now in main.py (lines30-38)\
				edit for your data\
				you will also need to populate the images folder in ML_microCT\
					use float32 grid and phase reconstruction .tif stacks\
					use labeled .tif stacks\
			enable interactivity at this point would be cool\'85on my list\
		
\b 3c) 
\b0 now choose 
\b 2 
\b0 to threshold, inver and downsample. processed stack will save\
		
\b 3d) 
\b0 now choose 
\b 3 
\b0 to generate local thickness stack. local thickness stack will save\
		
\b 3e) 
\b0 choose 
\b 4
\b0  when local thickness stack has already been generated and saved\
		
\b 3f) 
\b0 now choose 
\b 5 
\b0 to go back one step to 
\b main menu\
	4) 
\b0 Program 
\b main menu 
\b0 will be displayed\
		
\b order 
\b0 is vital as there are currently no re-routing methods implemented\
		
\b 4a) 
\b0 choose 
\b 2 
\b0 to navigate to 
\b train model menu\
		4b) 
\b0 now choose 
\b 1 
\b0 to define image subset for training and testing\
			this is hardcoded for now in main.py (lines67-74)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 				edit for your data\
			enable interactivity here too\
		
\b 4c) 
\b0 now choose 
\b 2 
\b0 to display images and stack dimensions for quality control\
			display images function in ImgLoadProcess.py file is faulty, fix\
		
\b 4d) 
\b0 now choose 
\b 3 
\b0 to train model, this step takes a few minutes\
		
\b 4e) 
\b0 now choose 
\b 4 
\b0 to go back one step to 
\b main menu\
	5) 
\b0 Program 
\b main menu 
\b0 will be displayed\
		
\b 5a) 
\b0 choose 
\b 3 
\b0 to display Out Of Box prediction accuracy \
		
\b 5b) 
\b0 optionally, enter 1 to view feature layer importance\
	
\b 6) 
\b0 Program 
\b main menu 
\b0 will be displayed\
		
\b 6a) 
\b0 choose 
\b 4 
\b0 to\'85\
		
\b \'85Will progress from here\'85
\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 		
\b \
		}